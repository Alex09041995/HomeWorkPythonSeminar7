print("Данный код c заданной функцией принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца. Нумерация строк и столбцов должна идти с единицы.")

def print_operation_table(operation, num_rows = 6, num_columns = 6): # Создали функцию с присвоенными значениями
    a = [[operation(i, j) for j in range(1, num_columns + 1)] for i in range(1, num_rows + 1)] # Создали переменную 'а' в которой будут две переменные для вывода значений, и идём по циклу указав 1, чтобы указать функции что мы считаем с первого элемента и +1 перебираем каждый элемент начиная с 1
    for i in a: # пока переменная 'i' находится в диапозоне значений переменной 'a' выводим результат
        print(* [f"{x: > 3}" for x in i]) # Выводим результат и вставляем (*) звёздочку для того, чтобы указать коду, что у нас будет приниматься неограниченное количество аргументов, и указав срез : справа от 'x' - то есть будем брать все значения справа от 'x' больше 3, и пока 'x' находится в диапозоне значений переменной 'i'
print_operation_table(lambda x, y: x * y) # Выводим результат функции, используя при этом Лямбда-функцию для реализации анонимных функций



